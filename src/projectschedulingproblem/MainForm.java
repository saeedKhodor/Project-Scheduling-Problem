/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projectschedulingproblem;

import java.awt.Cursor;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author saeed
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    private Portfolio Portfolio1;
    private Logger Log;
    private boolean ProcessingStarted = false;
    public static WritetoCSV CSVier;
    private int Precision = 5;
    public static String PrecFormat = "";
    public static boolean DeactivateTA = false;
    private GeneticsMain GM;

    public MainForm() {
        initComponents();
        String DFormat = "#.";
        for (int i = 0; i < Precision; i++) {
            DFormat += "#";
        }
        PrecFormat = DFormat;
        Log = new Logger(this.LogTextArea);
        //SheetPanel=new javax.swing.JPanel();
        // this.PortfolioPanel.setPreferredSize(new Dimension(587, 405));
        // this.PortfolioPanel.setLayout(new FlowLayout(FlowLayout.CENTER));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jFileChooser2 = new javax.swing.JFileChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        LogTextArea = new javax.swing.JTextArea();
        ProjectPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DSMSheetsList = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        DSMStartCellTF = new javax.swing.JTextField();
        DSMEndCellTF = new javax.swing.JTextField();
        ActivitiesSheetsList = new javax.swing.JComboBox();
        ReworkSheetsList = new javax.swing.JComboBox();
        ActivitiesStartCellTF = new javax.swing.JTextField();
        ActivitiesEndCellTF = new javax.swing.JTextField();
        ReworkStartCellTF = new javax.swing.JTextField();
        ReworkEndCellTF = new javax.swing.JTextField();
        ProcessProject = new javax.swing.JButton();
        ResourcePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ProcessResourcesB = new javax.swing.JButton();
        ResourceSheetsList = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ResourceTableEndCellTF = new javax.swing.JTextField();
        ResourceTableStartCellTF = new javax.swing.JTextField();
        HasHeader = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        ProcessFile = new javax.swing.JButton();
        BrowseExcel = new javax.swing.JButton();
        BrowseTextField = new javax.swing.JTextField();
        SetDefaultvalues = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        Usedmemory_LB = new javax.swing.JLabel();
        freememory_LB = new javax.swing.JLabel();
        totalmemory_LB = new javax.swing.JLabel();
        maxmemory_LB = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        NumberofGenerationsTF = new javax.swing.JTextField();
        PopulationsizeTF = new javax.swing.JTextField();
        MutationFactorTF = new javax.swing.JTextField();
        CrossOverFactorTF = new javax.swing.JTextField();
        ApplyGenetics_B = new javax.swing.JButton();
        Feasibility_CHB = new javax.swing.JCheckBox();
        Genetics_CB = new javax.swing.JComboBox();
        TWOPOINT_CHB = new javax.swing.JCheckBox();
        ByPassFittest = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        PrepareforGeneticsB = new javax.swing.JButton();
        PreperationMethod = new javax.swing.JComboBox();
        LogicalRunTimes_TF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Grouping_CHB = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Report = new javax.swing.JMenuItem();
        OpenReportsFolder_B = new javax.swing.JMenuItem();
        Verbose = new javax.swing.JMenu();
        NoVerbose = new javax.swing.JMenuItem();
        Verbose1 = new javax.swing.JMenuItem();
        Verbose2 = new javax.swing.JMenuItem();
        Verbose3 = new javax.swing.JMenuItem();

        jFileChooser2.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Project Scheduling simulator");
        setName("MainFrame"); // NOI18N

        LogTextArea.setColumns(20);
        LogTextArea.setRows(5);
        jScrollPane2.setViewportView(LogTextArea);

        ProjectPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 255)));

        jLabel1.setText("DSM");

        jLabel2.setText("Rework");

        jLabel4.setText("Activities");

        jLabel7.setText("Sheet:");

        jLabel9.setText("Start Cell:");

        jLabel10.setText("End Cell:");

        DSMStartCellTF.setInputVerifier(new PassVerifier());

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, DSMEndCellTF, org.jdesktop.beansbinding.ObjectProperty.create(), DSMStartCellTF, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        DSMEndCellTF.setInputVerifier(new PassVerifier());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ActivitiesStartCellTF, org.jdesktop.beansbinding.ObjectProperty.create(), DSMEndCellTF, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        ActivitiesStartCellTF.setInputVerifier(new PassVerifier());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ActivitiesEndCellTF, org.jdesktop.beansbinding.ObjectProperty.create(), ActivitiesStartCellTF, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        ActivitiesEndCellTF.setInputVerifier(new PassVerifier());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ReworkStartCellTF, org.jdesktop.beansbinding.ObjectProperty.create(), ActivitiesEndCellTF, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        ReworkStartCellTF.setInputVerifier(new PassVerifier());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ReworkEndCellTF, org.jdesktop.beansbinding.ObjectProperty.create(), ReworkStartCellTF, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        ReworkEndCellTF.setInputVerifier(new PassVerifier());

        ProcessProject.setText("Process Project");
        ProcessProject.setEnabled(false);
        ProcessProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ProjectPanelLayout = new javax.swing.GroupLayout(ProjectPanel);
        ProjectPanel.setLayout(ProjectPanelLayout);
        ProjectPanelLayout.setHorizontalGroup(
            ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProcessProject)
                    .addGroup(ProjectPanelLayout.createSequentialGroup()
                        .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(DSMStartCellTF)
                                .addComponent(DSMEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DSMSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ActivitiesSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ActivitiesStartCellTF)
                                .addComponent(ActivitiesEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ReworkSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ReworkStartCellTF)
                                .addComponent(ReworkEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        ProjectPanelLayout.setVerticalGroup(
            ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProjectPanelLayout.createSequentialGroup()
                        .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(15, 15, 15)
                        .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(DSMSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(ActivitiesSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProjectPanelLayout.createSequentialGroup()
                                .addComponent(ActivitiesStartCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ActivitiesEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ProjectPanelLayout.createSequentialGroup()
                                .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(DSMStartCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(DSMEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(ProjectPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(15, 15, 15)
                        .addComponent(ReworkSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReworkStartCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReworkEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProcessProject)
                .addContainerGap())
        );

        ResourcePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 2));
        ResourcePanel.setEnabled(false);
        ResourcePanel.setPreferredSize(new java.awt.Dimension(409, 100));

        jLabel3.setText("Resource Table");

        ProcessResourcesB.setText("Process Resources");
        ProcessResourcesB.setEnabled(false);
        ProcessResourcesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessResourcesBActionPerformed(evt);
            }
        });

        jLabel5.setText("Sheet:");

        jLabel6.setText("Starting Cell:");

        jLabel8.setText("End Cell:");

        ResourceTableEndCellTF.setColumns(4);
        ResourceTableEndCellTF.setInputVerifier(new PassVerifier());

        ResourceTableStartCellTF.setColumns(4);
        ResourceTableStartCellTF.setInputVerifier(new PassVerifier());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ResourceTableEndCellTF, org.jdesktop.beansbinding.ObjectProperty.create(), ResourceTableStartCellTF, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        HasHeader.setSelected(true);
        HasHeader.setText("has Header");

        javax.swing.GroupLayout ResourcePanelLayout = new javax.swing.GroupLayout(ResourcePanel);
        ResourcePanel.setLayout(ResourcePanelLayout);
        ResourcePanelLayout.setHorizontalGroup(
            ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResourcePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ResourcePanelLayout.createSequentialGroup()
                        .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ResourcePanelLayout.createSequentialGroup()
                        .addComponent(HasHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(ResourceSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResourceTableStartCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResourceTableEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProcessResourcesB))
                .addContainerGap())
        );
        ResourcePanelLayout.setVerticalGroup(
            ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResourcePanelLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResourceSheetsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(1, 1, 1)
                .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ResourceTableStartCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ResourceTableEndCellTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(ResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HasHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProcessResourcesB))
                .addGap(2, 2, 2))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51)));

        ProcessFile.setText("Process File");
        ProcessFile.setEnabled(false);
        ProcessFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessFileActionPerformed(evt);
            }
        });

        BrowseExcel.setText("Browse Excel");
        BrowseExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseExcelActionPerformed(evt);
            }
        });

        BrowseTextField.setEditable(false);

        SetDefaultvalues.setText("set default Values");
        SetDefaultvalues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetDefaultvaluesActionPerformed(evt);
            }
        });

        Usedmemory_LB.setText("Used Memory:");

        freememory_LB.setText("Free Memory:");

        totalmemory_LB.setText("Total Memory:");

        maxmemory_LB.setText("Max Memory:");

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(ProcessFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SetDefaultvalues)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(BrowseExcel)
                        .addGap(162, 162, 162)))
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(freememory_LB)
                    .addComponent(totalmemory_LB)
                    .addComponent(Usedmemory_LB)
                    .addComponent(maxmemory_LB)
                    .addComponent(Refresh))
                .addGap(97, 97, 97))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(BrowseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(225, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(freememory_LB)
                        .addGap(0, 0, 0)
                        .addComponent(Usedmemory_LB))
                    .addComponent(BrowseExcel, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 0, 0)
                .addComponent(totalmemory_LB)
                .addGap(0, 0, 0)
                .addComponent(maxmemory_LB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProcessFile)
                    .addComponent(SetDefaultvalues)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Refresh))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(BrowseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(54, Short.MAX_VALUE)))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)));

        jLabel11.setText("CrossOverFactor:");

        jLabel12.setText("MutationFactor:");

        jLabel13.setText("Population Size:");

        jLabel14.setText(" # of Generations:");

        NumberofGenerationsTF.setColumns(3);
        NumberofGenerationsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberofGenerationsTFActionPerformed(evt);
            }
        });

        PopulationsizeTF.setColumns(3);
        PopulationsizeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopulationsizeTFActionPerformed(evt);
            }
        });

        MutationFactorTF.setColumns(3);
        MutationFactorTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MutationFactorTFActionPerformed(evt);
            }
        });

        CrossOverFactorTF.setColumns(3);
        CrossOverFactorTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrossOverFactorTFActionPerformed(evt);
            }
        });

        ApplyGenetics_B.setText("Apply");
        ApplyGenetics_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyGenetics_BActionPerformed(evt);
            }
        });

        Feasibility_CHB.setSelected(true);
        Feasibility_CHB.setText("Feasibility");
        Feasibility_CHB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Feasibility_CHBActionPerformed(evt);
            }
        });

        Genetics_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random", "Not Random" }));

        TWOPOINT_CHB.setText("TwoPoint");
        TWOPOINT_CHB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TWOPOINT_CHBActionPerformed(evt);
            }
        });

        ByPassFittest.setText("Bypass Fittest");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CrossOverFactorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MutationFactorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberofGenerationsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PopulationsizeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ByPassFittest)
                            .addComponent(TWOPOINT_CHB)
                            .addComponent(Feasibility_CHB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Genetics_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ApplyGenetics_B))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(CrossOverFactorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(MutationFactorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Feasibility_CHB, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Genetics_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(TWOPOINT_CHB, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(PopulationsizeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ByPassFittest, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberofGenerationsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(ApplyGenetics_B))
                .addGap(32, 32, 32))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 204)));

        PrepareforGeneticsB.setText("Prepare for genetics");
        PrepareforGeneticsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrepareforGeneticsBActionPerformed(evt);
            }
        });

        PreperationMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Logical", "Exhaustive" }));
        PreperationMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreperationMethodActionPerformed(evt);
            }
        });

        LogicalRunTimes_TF.setText("10");

        jLabel15.setText("Logica Factor");

        Grouping_CHB.setText("Grouping");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(PreperationMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(PrepareforGeneticsB))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel15)
                        .addGap(5, 5, 5)
                        .addComponent(LogicalRunTimes_TF)
                        .addGap(18, 18, 18)
                        .addComponent(Grouping_CHB)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PreperationMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrepareforGeneticsB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LogicalRunTimes_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(Grouping_CHB, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Options");

        Report.setText("Generate Report");
        Report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportActionPerformed(evt);
            }
        });
        jMenu2.add(Report);

        OpenReportsFolder_B.setText("Open Reports Folder");
        OpenReportsFolder_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenReportsFolder_BActionPerformed(evt);
            }
        });
        jMenu2.add(OpenReportsFolder_B);

        jMenuBar1.add(jMenu2);

        Verbose.setText("Verbose");

        NoVerbose.setText("No Verbose");
        NoVerbose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoVerboseActionPerformed(evt);
            }
        });
        Verbose.add(NoVerbose);

        Verbose1.setText("1");
        Verbose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Verbose1ActionPerformed(evt);
            }
        });
        Verbose.add(Verbose1);

        Verbose2.setText("2");
        Verbose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Verbose2ActionPerformed(evt);
            }
        });
        Verbose.add(Verbose2);

        Verbose3.setText("3");
        Verbose3.setEnabled(false);
        Verbose3.setSelected(true);
        Verbose3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Verbose3ActionPerformed(evt);
            }
        });
        Verbose.add(Verbose3);

        jMenuBar1.add(Verbose);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ResourcePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResourcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProjectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(1, 1, 1))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.gc();
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void BrowseExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseExcelActionPerformed

        FileFilter filter1 = new ExtensionFileFilter("xls and xlsx", new String[]{"xls", "xlsx"});
        jFileChooser2.setFileFilter(filter1);
        jFileChooser2.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = jFileChooser2.showOpenDialog(this);

        File file;
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            file = jFileChooser2.getSelectedFile();
            if (file.exists()) {
                BrowseTextField.setText(file.getPath());
                this.ProcessFile.setEnabled(true);

            }
        }
        CSVier = new WritetoCSV(this.Log);
        // MainForm.CSVier.WritetoCSV("x1");

    }//GEN-LAST:event_BrowseExcelActionPerformed

    private void ProcessFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessFileActionPerformed
        if (!ProcessingStarted) {
            ProcessingStarted = true;
            Log.appendToLog(Logger.PROCESSING, "MainForm: Processing has started...");
            // this.PortfolioPanel.setVisible(false);
            // entry Point of processing
            this.Portfolio1 = new Portfolio(this, Log, this.BrowseTextField.getText());

            if (this.addSheetNamesToLists()) {
                this.ProcessResourcesB.setEnabled(true);
            }

        } else {
            this.Log.appendToLog(Logger.PROCESSING, "MainForm: the Processing already has started ... ");
        }
        updateRuntimemoryLabel();
    }//GEN-LAST:event_ProcessFileActionPerformed

    private void Verbose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Verbose1ActionPerformed
        this.Log.setVerbose(1);
        VerboseItems(1);

    }//GEN-LAST:event_Verbose1ActionPerformed

    private void Verbose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Verbose2ActionPerformed
        this.Log.setVerbose(2);
        VerboseItems(2);

    }//GEN-LAST:event_Verbose2ActionPerformed

    private void Verbose3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Verbose3ActionPerformed
        this.Log.setVerbose(3);
        VerboseItems(3);

    }//GEN-LAST:event_Verbose3ActionPerformed

    private void NoVerboseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoVerboseActionPerformed
        this.Log.setVerbose(0);
        VerboseItems(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_NoVerboseActionPerformed

    private void ProcessResourcesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessResourcesBActionPerformed
        updateRuntimemoryLabel();
        if (this.ResourceTableEndCellTF.getText().equals("") || this.ResourceTableStartCellTF.getText().equals("")) {
            this.Log.appendToLog(Logger.HAS_TO_SHOW, "MainForm: ProcessResourcesBActionPerformed: please specify a value in the startingcell or endingcell ");
            return;

        }
        boolean canproceed = Portfolio1.loadGlobalResouces(this.ResourceSheetsList.getSelectedItem().toString(), this.ResourceTableStartCellTF.getText(), this.ResourceTableEndCellTF.getText(), this.HasHeader.isSelected());
        if (canproceed) {
            this.ProcessProject.setEnabled(true);
        } else {
            this.Log.appendToLog(Logger.HAS_TO_SHOW, "MainForm: ProcessResourcesBActionPerformed: we have a problem in loading the resources ");
        }
        updateRuntimemoryLabel();
    }//GEN-LAST:event_ProcessResourcesBActionPerformed

    private void ProcessProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessProjectActionPerformed
        updateRuntimemoryLabel();
        boolean somethingisempty = false;
        if (this.DSMSheetsList.getSelectedItem().toString().equals("")) {
            somethingisempty = true;
        }

        if (this.DSMStartCellTF.getText().equals("")) {
            somethingisempty = true;
        }
        if (this.DSMEndCellTF.getText().equals("")) {
            somethingisempty = true;
        }

        if (this.ActivitiesSheetsList.getSelectedItem().toString().equals("")) {
            somethingisempty = true;
        }
        if (this.ActivitiesStartCellTF.getText().equals("")) {
            somethingisempty = true;
        }
        if (this.ActivitiesEndCellTF.getText().equals("")) {
            somethingisempty = true;
        }

        if (this.ReworkSheetsList.getSelectedItem().toString().equals("")) {
            somethingisempty = true;
        }
        if (this.ReworkStartCellTF.getText().equals("")) {
            somethingisempty = true;
        }
        if (this.ReworkEndCellTF.getText().equals("")) {
            somethingisempty = true;
        }



        if (somethingisempty) {
            this.Log.appendToLog(Logger.HAS_TO_SHOW, "MainForm: ProcessProjectActionPerformed: please specify all the values in the fields ");
            return;

        }

        ProjectCapsule PC = new ProjectCapsule(Log);
        PC.setDSMSheetname(this.DSMSheetsList.getSelectedItem().toString());
        PC.setDSMStartCell(this.DSMStartCellTF.getText());
        PC.setDSMEndCell(this.DSMEndCellTF.getText());
        this.Log.appendToLog(Logger.INFORMATION, "Main Form : ProcessProjectActionPerformed : the DSM in the project Capsule has been set");
        PC.setActivitiesSheetname(this.ActivitiesSheetsList.getSelectedItem().toString());
        PC.setActivitiesStartCell(this.ActivitiesStartCellTF.getText());
        PC.setActivitiesEndCell(this.ActivitiesEndCellTF.getText());
        this.Log.appendToLog(Logger.INFORMATION, "Main Form : ProcessProjectActionPerformed : the Activities in the project Capsule has been set");
        PC.setReworkSheetname(this.ReworkSheetsList.getSelectedItem().toString());
        PC.setReworkStartCell(this.ReworkStartCellTF.getText());
        PC.setReworkEndCell(this.ReworkEndCellTF.getText());
        this.Log.appendToLog(Logger.INFORMATION, "Main Form : ProcessProjectActionPerformed : the Rework in the project Capsule has been set");

        this.Log.appendToLog(Logger.INFORMATION, "Main Form : ProcessProjectActionPerformed : capsule :" + PC.toString());

        Portfolio1.loadProject(PC, true);// the hasheader is not used still in this function
        updateRuntimemoryLabel();

    }//GEN-LAST:event_ProcessProjectActionPerformed

    private void SetDefaultvaluesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetDefaultvaluesActionPerformed

        int x = Integer.parseInt(jTextField1.getText());
        //new WritetoCSV(this.Log);
        if (x == 1) {
            this.ResourceTableStartCellTF.setText("A1");
            this.ResourceTableEndCellTF.setText("B13");
            this.ActivitiesStartCellTF.setText("A1");
            this.ActivitiesEndCellTF.setText("I11");
            this.DSMStartCellTF.setText("A1");
            this.DSMEndCellTF.setText("L11");
            this.ReworkStartCellTF.setText("A17");
            this.ReworkEndCellTF.setText("L27");
        } else if (x == 2) {
            this.ResourceTableStartCellTF.setText("A1");
            this.ResourceTableEndCellTF.setText("B13");
            this.ActivitiesStartCellTF.setText("A15");
            this.ActivitiesEndCellTF.setText("I32");
            this.DSMStartCellTF.setText("A1");
            this.DSMEndCellTF.setText("S18");
            this.ReworkStartCellTF.setText("A22");
            this.ReworkEndCellTF.setText("S39");
        } else if (x == 3) {
            this.ResourceTableStartCellTF.setText("A1");
            this.ResourceTableEndCellTF.setText("B13");
            this.ActivitiesStartCellTF.setText("A36");
            this.ActivitiesEndCellTF.setText("I69");
            this.DSMStartCellTF.setText("A1");
            this.DSMEndCellTF.setText("AI34");
            this.ReworkStartCellTF.setText("A39");
            this.ReworkEndCellTF.setText("AI72");
        }
        this.MutationFactorTF.setText("0.02");
        this.CrossOverFactorTF.setText("0.7");
        this.PopulationsizeTF.setText("20");
        this.NumberofGenerationsTF.setText("10");

        // TODO add your handling code here:
    }//GEN-LAST:event_SetDefaultvaluesActionPerformed

    private void PrepareforGeneticsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrepareforGeneticsBActionPerformed
        updateRuntimemoryLabel();
        final long startTime = System.currentTimeMillis();
        this.GM = null;
        System.gc();
        this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
        int Logicalfactor = Integer.parseInt(this.LogicalRunTimes_TF.getText());
        if (Logicalfactor >= 100) {
            JOptionPane.showMessageDialog(this, " the value is large for the Heap space of the TextArea at the current Verbose level, so the level ");
            DeactivateTA = true;

        }
        if (PreperationMethod.getSelectedItem().toString().equalsIgnoreCase("Logical")) {
            LogicalMethod LM = new LogicalMethod(Log, Portfolio1);
            LM.StartTSs(Logicalfactor);
            //LM.generateReport();
            this.GM = new GeneticsMain(Log, LM, this.Grouping_CHB.isSelected());
        }
        if (PreperationMethod.getSelectedItem().toString().equalsIgnoreCase("Exhaustive")) {

            ExhaustiveMethod EM = new ExhaustiveMethod(Log, Portfolio1);
            EM.StartExhaustives();
            this.GM = new GeneticsMain(Log, EM);
        }
        final long EndTime = System.currentTimeMillis();

        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        long millis = (EndTime - startTime);

        JOptionPane.showMessageDialog(this, " Time of excution is " + String.format("%d min, %d sec", TimeUnit.MILLISECONDS.toMinutes(millis), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis))));
        CSVier.WriteFinalExcution("PrepareforGeneticsBActionPerformed," + String.format("%d min:%d sec", TimeUnit.MILLISECONDS.toMinutes(millis), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis))) + " ,Logical Factor " + Logicalfactor, false);
        updateRuntimemoryLabel();
    }//GEN-LAST:event_PrepareforGeneticsBActionPerformed

    private void ReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportActionPerformed

        for (Project P : Portfolio1.getProjects()) {

            Log.appendToLog(Logger.HAS_TO_SHOW, "***" + P.toString());
            for (ProjectActivity PA : P.getPAs()) {
                Log.appendToLog(Logger.HAS_TO_SHOW, PA.toString());
            }
        }
    }//GEN-LAST:event_ReportActionPerformed

    private void OpenReportsFolder_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenReportsFolder_BActionPerformed

        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().open(new File(CSVier.getCurrentDirectory()));

            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_OpenReportsFolder_BActionPerformed

    private void PreperationMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreperationMethodActionPerformed
        if (PreperationMethod.getSelectedItem().toString().equalsIgnoreCase("Exhaustive")) {
            this.LogicalRunTimes_TF.setEnabled(false);
            this.Grouping_CHB.setEnabled(false);
        } else {
            this.LogicalRunTimes_TF.setEnabled(true);
            this.Grouping_CHB.setEnabled(true);
        }

    }//GEN-LAST:event_PreperationMethodActionPerformed

    private void TWOPOINT_CHBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TWOPOINT_CHBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TWOPOINT_CHBActionPerformed

    private void Feasibility_CHBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Feasibility_CHBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Feasibility_CHBActionPerformed

    private void ApplyGenetics_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyGenetics_BActionPerformed

        updateRuntimemoryLabel();
        final long startTime = System.currentTimeMillis();
        float CrossOverFactor = (float) Double.parseDouble(this.CrossOverFactorTF.getText());
        float MutationFactor = (float) Double.parseDouble(this.MutationFactorTF.getText());
        float Populationsize = (float) Double.parseDouble(this.PopulationsizeTF.getText());
        float NumberofGenerations = (float) Double.parseDouble(this.NumberofGenerationsTF.getText());
        boolean FeasilbiltyON = this.Feasibility_CHB.isSelected();
        boolean byPassFittest = this.ByPassFittest.isSelected();

        String R = this.Genetics_CB.getSelectedItem().toString();
        int FirstGenChoosingMode;
        if (R.equalsIgnoreCase("Random")) {
            FirstGenChoosingMode = GeneticsMain.RANDOMFIRSTGEN;
        } else {
            FirstGenChoosingMode = GeneticsMain.NOTRANDOMFIRSTGEN;

        }

        int CrossoverMode;
        if (TWOPOINT_CHB.isSelected()) {
            CrossoverMode = GeneticsMain.TWOPOINTCROSSOVERMODE;
        } else {
            CrossoverMode = GeneticsMain.ONEPOINTCROSSOVERMODE;
        }
        GeneticsVariablesCapsule GVC = new GeneticsVariablesCapsule(CrossOverFactor, MutationFactor, Populationsize, NumberofGenerations, FeasilbiltyON, CrossoverMode, FirstGenChoosingMode, byPassFittest);

        this.GM.ProcessGps(GVC);

        final long EndTime = System.currentTimeMillis();

        long millis = (EndTime - startTime);
        JOptionPane.showMessageDialog(this, " Time of excution is " + String.format("%d min, %d sec", TimeUnit.MILLISECONDS.toMinutes(millis), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis))));
        CSVier.WriteFinalExcution("ApplyGenetics," + String.format("%d min:%d sec", TimeUnit.MILLISECONDS.toMinutes(millis), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis))) + "," + GVC.toString(), false);
        //this.GM=null;
        System.gc();
        updateRuntimemoryLabel();
    }//GEN-LAST:event_ApplyGenetics_BActionPerformed

    private void CrossOverFactorTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrossOverFactorTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CrossOverFactorTFActionPerformed

    private void MutationFactorTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MutationFactorTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MutationFactorTFActionPerformed

    private void PopulationsizeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopulationsizeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PopulationsizeTFActionPerformed

    private void NumberofGenerationsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberofGenerationsTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumberofGenerationsTFActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        this.updateRuntimemoryLabel();
    }//GEN-LAST:event_RefreshActionPerformed

    private void VerboseItems(int i) {

        if (i == 0) {
            this.Verbose1.setEnabled(true);
            this.Verbose2.setEnabled(true);
            this.Verbose3.setEnabled(true);
            this.NoVerbose.setEnabled(false);
        }
        if (i == 1) {
            this.Verbose1.setEnabled(false);
            this.Verbose2.setEnabled(true);
            this.Verbose3.setEnabled(true);
            this.NoVerbose.setEnabled(true);
        }
        if (i == 2) {
            this.Verbose1.setEnabled(true);
            this.Verbose2.setEnabled(false);
            this.Verbose3.setEnabled(true);
            this.NoVerbose.setEnabled(true);

        }
        if (i == 3) {
            this.Verbose1.setEnabled(true);
            this.Verbose2.setEnabled(true);
            this.Verbose3.setEnabled(false);
            this.NoVerbose.setEnabled(true);
        }

    }

    private void updateRuntimemoryLabel() {

        int mb = 1024 * 1024;

        //Getting the runtime reference from system
        Runtime runtime = Runtime.getRuntime();

        //Print used memory
        Usedmemory_LB.setText("Used Memory:"
                + (runtime.totalMemory() - runtime.freeMemory()) / mb);

        //Print free memory
        freememory_LB.setText("Free Memory:"
                + runtime.freeMemory() / mb);

        //Print total available memory
        totalmemory_LB.setText("Total Memory:" + runtime.totalMemory() / mb);

        //Print Maximum available memory
        maxmemory_LB.setText("Max Memory:" + runtime.maxMemory() / mb);
    }

    /**
     * this function has not been used , instead the use of list displaying the
     * sheets seemed to be a much better Idea
     */
//public void createSheetRadioButtons(ArrayList <String> sheets){
//     Log.appendToLog(Logger.INFORMATION, "MainForm : CreateSheetRadioBuottons : Creating Sheet Radio Buttons" );
//   Sheets=new ButtonGroup();
//     for(String S : sheets){
//         JRadioButton JRB=new JRadioButton(S);
//         Log.appendToLog(Logger.INFORMATION, "MainForm : CreateSheetRadioBuottons : SheetButton "+S +" Created" );
//          
//         Sheets.add(JRB);
//         JRB.setVisible(true);
//         this.SheetPanel.add(JRB); 
//        }
//    SheetPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
//    SheetPanel.revalidate();
//    PortfolioPanel.add(SheetPanel);
//    PortfolioPanel.revalidate();
//
//    Log.appendToLog(Logger.INFORMATION, "MainForm : CreateSheetRadioBuottons : Sheets panel Revalidated count " + SheetPanel.getComponentCount());
//    
//}
    /**
     * this function is used to fill out the lists in the ResourceSheetsList,
     */
    public boolean addSheetNamesToLists() {
        ArrayList<String> Sheets1 = Portfolio1.getSheetnames();
        ResourceSheetsList.removeAllItems();
        for (String S : Sheets1) {
            ResourceSheetsList.addItem(S);
        }

        DSMSheetsList.removeAllItems();
        for (String S : Sheets1) {
            DSMSheetsList.addItem(S);
        }
        ActivitiesSheetsList.removeAllItems();
        for (String S : Sheets1) {
            ActivitiesSheetsList.addItem(S);
        }

        ReworkSheetsList.removeAllItems();
        for (String S : Sheets1) {
            ReworkSheetsList.addItem(S);
        }

        if (Sheets1.isEmpty()) {
            return false;
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ActivitiesEndCellTF;
    private javax.swing.JComboBox ActivitiesSheetsList;
    private javax.swing.JTextField ActivitiesStartCellTF;
    private javax.swing.JButton ApplyGenetics_B;
    private javax.swing.JButton BrowseExcel;
    private javax.swing.JTextField BrowseTextField;
    private javax.swing.JCheckBox ByPassFittest;
    private javax.swing.JTextField CrossOverFactorTF;
    private javax.swing.JTextField DSMEndCellTF;
    private javax.swing.JComboBox DSMSheetsList;
    private javax.swing.JTextField DSMStartCellTF;
    private javax.swing.JCheckBox Feasibility_CHB;
    private javax.swing.JComboBox Genetics_CB;
    private javax.swing.JCheckBox Grouping_CHB;
    private javax.swing.JCheckBox HasHeader;
    private javax.swing.JTextArea LogTextArea;
    private javax.swing.JTextField LogicalRunTimes_TF;
    private javax.swing.JTextField MutationFactorTF;
    private javax.swing.JMenuItem NoVerbose;
    private javax.swing.JTextField NumberofGenerationsTF;
    private javax.swing.JMenuItem OpenReportsFolder_B;
    private javax.swing.JTextField PopulationsizeTF;
    private javax.swing.JButton PrepareforGeneticsB;
    private javax.swing.JComboBox PreperationMethod;
    private javax.swing.JButton ProcessFile;
    private javax.swing.JButton ProcessProject;
    private javax.swing.JButton ProcessResourcesB;
    private javax.swing.JPanel ProjectPanel;
    private javax.swing.JButton Refresh;
    private javax.swing.JMenuItem Report;
    private javax.swing.JPanel ResourcePanel;
    private javax.swing.JComboBox ResourceSheetsList;
    private javax.swing.JTextField ResourceTableEndCellTF;
    private javax.swing.JTextField ResourceTableStartCellTF;
    private javax.swing.JTextField ReworkEndCellTF;
    private javax.swing.JComboBox ReworkSheetsList;
    private javax.swing.JTextField ReworkStartCellTF;
    private javax.swing.JButton SetDefaultvalues;
    private javax.swing.JCheckBox TWOPOINT_CHB;
    private javax.swing.JLabel Usedmemory_LB;
    private javax.swing.JMenu Verbose;
    private javax.swing.JMenuItem Verbose1;
    private javax.swing.JMenuItem Verbose2;
    private javax.swing.JMenuItem Verbose3;
    private javax.swing.JLabel freememory_LB;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel maxmemory_LB;
    private javax.swing.JLabel totalmemory_LB;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}

class PassVerifier extends InputVerifier {

    /**
     *
     * @param input
     * @return
     */
    @Override
    public boolean verify(JComponent input) {
        JTextField tf = (JTextField) input;
        String str = tf.getText();
//               if (string.matches("^[A-I].*$"))
        if (str.matches("^[A-Z][A-Z0-9]*[0-9]")) {
            return true;
        } else {
            return false;
        }
    }
}
